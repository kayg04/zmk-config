/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    flavor = "tap-unless-interrupted";
    tapping-term-ms = <300>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &mt LS(LA(LC(LGUI))) Q  &kp W           &kp F         &kp P             &kp B        &kp J        &kp L            &kp U         &kp Y       &mt RS(RA(RC(RIGHT_GUI))) SINGLE_QUOTE  &none
&none  &mt LEFT_GUI A          &mt LEFT_ALT R  &mt LCTRL S   &mt LEFT_SHIFT T  &kp G        &kp M        &mt RSHFT N      &mt RCTRL E   &mt RALT I  &mt RIGHT_GUI O                         &none
&none  &kp Z                   &kp X           &kp C         &kp D             &kp V        &kp K        &kp H            &kp COMMA     &kp DOT     &kp FSLH                                &none
                                               &lt 1 ESCAPE  &lt 2 SPACE       &lt 0 TAB    &lt 3 ENTER  &lt 4 BACKSPACE  &lt 5 DELETE
            >;
        };

        media {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none     &none     &none      &none      &none      &none         &none             &none              &none            &none         &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none      &soft_off     &kp C_PREVIOUS    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT    &none
&none  &none     &none     &none      &none      &none      &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2       &bt BT_SEL 3     &bt BT_SEL 4  &none
                           &trans     &kp SPACE  &kp TAB    &kp C_STOP    &kp C_PLAY_PAUSE  &kp C_MUTE
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &bootloader  &none     &none      &none      &none      &kp C_AC_REDO  &kp C_AC_PASTE  &kp C_AC_COPY   &kp C_AC_CUT  &kp C_AC_UNDO    &none
&none  &kp LGUI     &kp LALT  &kp LCTRL  &kp LSHFT  &none      &kp CAPSLOCK   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none
&none  &none        &none     &none      &none      &none      &kp INSERT     &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END          &none
                              &kp ESC    &trans     &kp TAB    &kp RET        &kp BSPC        &kp DEL
            >;
        };

        symbol {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS           &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp GRAVE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE           &trans  &trans     &trans     &trans    &trans    &trans
                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &trans  &trans     &trans
            >;
        };

        num {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8     &kp N9  &kp RBKT     &trans  &trans     &trans     &trans    &trans    &bootloader
&trans  &kp SEMI   &kp N4  &kp N5     &kp N6  &kp EQUAL    &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2     &kp N3  &kp BSLH     &trans  &trans     &trans     &trans    &trans    &trans
                           &kp COMMA  &kp N0  &kp MINUS    &trans  &trans     &trans
            >;
        };

        function {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8   &kp F9     &kp PRINTSCREEN    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5   &kp F6     &kp SCROLLLOCK     &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp F10  &kp F1  &kp F2   &kp F3     &kp PAUSE_BREAK    &trans  &trans     &trans     &trans    &trans    &trans
                         &kp ESC  &kp SPACE  &kp TAB            &trans  &trans     &trans
            >;
        };
    };
};
